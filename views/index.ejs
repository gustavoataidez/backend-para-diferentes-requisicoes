<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registro de Alunos</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .card {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Registro de Alunos</h1>

        <div class="card mb-4">
            <div class="card-body">
                <form action="/alunos" method="post">
                    <fieldset>
                        <legend class="mb-3">Cadastrar ou Atualizar Aluno</legend>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="isNewStudent" name="isNewStudent" onchange="toggleForm()">
                            <label class="form-check-label" for="isNewStudent">Marque para cadastrar novo aluno</label>
                        </div>
                
                        <div id="studentSelect" class="mb-3">
                            <label for="studentList" class="form-label">Escolha um aluno para atualizar:</label>
                            <select class="form-select" id="studentList" name="studentList">
                            </select>
                        </div>
                
                        <div class="mb-3">
                            <label for="matricula" class="form-label">Matrícula:</label>
                            <input required type="text" class="form-control" id="matricula" name="matricula">
                        </div>
                
                        <div class="mb-3">
                            <label for="nome" class="form-label">Nome do Aluno:</label>
                            <input required type="text" class="form-control" id="nome" name="nome">
                        </div>
                
                        <div class="mb-3">
                            <label for="dataNascimento" class="form-label">Nascimento (dd/mm/aaaa):</label>
                            <input required type="date" class="form-control" id="dataNascimento" name="dataNascimento">
                        </div>
                
                        <div class="mb-3">
                            <label for="email" class="form-label">E-Mail:</label>
                            <input required type="email" class="form-control" id="email" name="email">
                        </div>
                    </fieldset>
                
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary" id="formButton">Cadastrar</button>
                        <button type="reset" class="btn btn-secondary">Limpar Campos</button>
                        <button type="button" class="btn btn-warning" onclick="atualizarAluno()" style="display: none;">Atualizar Aluno</button>
                        <button type="button" class="btn btn-danger" onclick="deletarAluno()" style="display: none;">Remover Aluno</button>
                    </div>
                </form>
            </div>
        </div>

        <div id="listaAlunos" class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title">Lista de Alunos</h5>
                    <button class="btn btn-primary mb-4" onclick="listarAlunos()">Listar Alunos</button>
                </div>
                <ul id="alunosList" class="list-group">
    
                </ul>
            </div>
        </div>

        <div id="response" class="mt-4"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

    <script>
        let alunosData = [];
    
        function populateStudentSelect(data) {
            alunosData = data.students;
            const select = document.getElementById('studentList');
            select.innerHTML = '<option value="">Selecione um aluno</option>';
            alunosData.forEach(student => {
                const option = document.createElement('option');
                option.value = student.matricula;
                option.textContent = student.nome;
                select.appendChild(option);
            });
        }
    
        function fillFormWithStudentData(studentId) {
            const student = alunosData.find(s => s.matricula === studentId);
            if (student) {
                document.getElementById('matricula').value = student.matricula || '';
                document.getElementById('nome').value = student.nome || '';
                document.getElementById('dataNascimento').value = student.dataNascimento && student.dataNascimento.includes('/') 
                    ? student.dataNascimento.split('/').reverse().join('-') 
                    : student.dataNascimento || '';
                document.getElementById('email').value = student.email || '';
            }
        }
    
        function toggleForm() {
            const isNewStudent = document.getElementById('isNewStudent').checked;
            document.getElementById('studentSelect').style.display = isNewStudent ? 'none' : 'block';
            document.getElementById('formButton').textContent = isNewStudent ? 'Cadastrar' : 'Atualizar';
            if (isNewStudent) {
                ['matricula', 'nome', 'dataNascimento', 'email'].forEach(id => document.getElementById(id).value = '');
            }
            toggleButtons(isNewStudent);
        }
    
        function toggleButtons(isNewStudent) {
            const buttons = {
                cadastrar: document.getElementById('formButton'),
                limpar: document.querySelector('button[type="reset"]'),
                remover: document.querySelector('button[onclick="deletarAluno()"]'),
                atualizar: document.querySelector('button[onclick="atualizarAluno()"]')
            };
    
            buttons.cadastrar.style.display = isNewStudent ? 'inline-block' : 'none';
            buttons.limpar.style.display = isNewStudent ? 'inline-block' : 'none';
            buttons.remover.style.display = isNewStudent ? 'none' : 'inline-block';
            buttons.atualizar.style.display = isNewStudent ? 'none' : 'inline-block';
        }
    
        document.getElementById('studentList').addEventListener('change', function() {
            fillFormWithStudentData(this.value);
            toggleButtons(false);
        });
    
        document.addEventListener('DOMContentLoaded', function() {
            fetch('http://localhost:3000/alunos')
                .then(response => response.json())
                .then(data => populateStudentSelect(data))
                .catch(error => console.error('Erro:', error));
            toggleButtons(true);
        });
    
        function atualizarAluno() {
            const formData = {
                matricula: document.getElementById('matricula').value,
                nome: document.getElementById('nome').value,
                dataNascimento: document.getElementById('dataNascimento').value,
                email: document.getElementById('email').value
            };
    
            fetch(`http://localhost:3000/alunos/${formData.matricula}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            })
            .then(handleResponse)
            .catch(handleError);
        }
    
        function deletarAluno() {
            const matricula = document.getElementById('matricula').value;
            fetch(`http://localhost:3000/alunos/${matricula}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
            })
            .then(handleResponse)
            .catch(handleError);
        }
    
        function handleResponse(response) {
            if (response.ok) {
                return response.text().then(html => {
                    document.open();
                    document.write(html);
                    document.close();
                });
            } else {
                throw new Error('Erro na operação');
            }
        }
    
        function handleError(error) {
            console.error('Erro:', error);
            alert('Erro na operação. Verifique o console para mais detalhes.');
        }
    
        function listarAlunos() {
            fetch('http://localhost:3000/alunos')
                .then(response => response.json())
                .then(data => {
                    alunosData = data.students;
                    renderizarListaAlunos(data.students);
                })
                .catch(error => console.error('Erro ao listar alunos:', error));
        }
    
        function renderizarListaAlunos(alunos) {
            const listaElement = document.getElementById('alunosList');
            listaElement.innerHTML = '';
            alunos.forEach(aluno => {
                const li = document.createElement('li');
                li.className = 'list-group-item';
                li.textContent = `${aluno.nome} (Matrícula: ${aluno.matricula}) - Email: ${aluno.email} - Nascimento: ${aluno.dataNascimento}`;
                listaElement.appendChild(li);
            });
        }
    </script>
</body>
</html>